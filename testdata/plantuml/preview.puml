@startuml
package "usecase" {
  package "usecase.fuga" {
    interface FugaUsecase {
      +Fuga()
    }
    struct fugaUsecase implements "FugaUsecase" {
      +Fuga()
    }
  }
  package "usecase.hoge" {
    interface HogeUsecase {
      +Hoge()
    }
    struct hogeUsecase implements "HogeUsecase" {
      +Hoge()
    }
  }
}

package "domain.repository" {
  package "domain.repository.hoge" {
    interface Hoge {
      +Hoge()
    }
  }
}

package "infrastructure" {
  package "infrastructure.hoge" {
    struct hoge implements "domain.repository.hoge.Hoge" {
      +Hoge()
    }
  }
  package "infrastructure.piyo" {
    struct piyo implements "usecase.queryservice.piyo.Piyo" {
      +Piyo()
    }
  }
}

package "handler" {
  package "handler.piyo" {
    struct piyoHandler {
      +Piyo()
    }
  }
  package "handler.fuga" {
    struct fugaHandler {
      +Fuga()
    }
  }
  package "handler.hoge" {
    struct hogeHandler {
      +Hoge()
    }
  }
}

package "usecase.queryservice" {
  package "usecase.queryservice.piyo" {
    interface Piyo {
      +Piyo()
    }
  }
}

usecase.fuga.fugaUsecase ..> domain.repository.hoge.Hoge
usecase.hoge.hogeUsecase ..> domain.repository.hoge.Hoge
handler.piyo.piyoHandler ..> usecase.queryservice.piyo.Piyo
handler.fuga.fugaHandler ..> usecase.fuga.FugaUsecase
handler.hoge.hogeHandler ..> usecase.hoge.HogeUsecase
@enduml

